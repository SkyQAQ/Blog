<?xml version="1.0" encoding="utf-8" ?>
<configuration>
    <!-- This section contains the log4net configuration settings -->
    <log4net>
      <!-- 下面的示例演示如何将AdONETAPPENER配置为将日志消息注册到SQLServer数据库。这些事件是以100的批次（缓冲大小）编写的。
      Connect类型指定用于连接到数据库的Stask.DATAIDBConnect的完全限定类型名称。连接字符串是数据库提供程序特定的。
      命令文本既可以是准备好的语句，也可以是存储过程，在这种情况下，它是一个准备好的语句。预备语句或存储过程的每个参数都用名称、数据库类型和呈现参数的值的布局指定。 -->
      <appender name="AdoNetAppender" type="log4net.Appender.AdoNetAppender">
        <bufferSize value="100" />
        <connectionType value="System.Data.SqlClient.SqlConnection, System.Data, Version=1.0.3300.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
        <connectionString value="data source=[database server];initial catalog=[database name];integrated security=false;persist security info=True;User ID=[user];Password=[password]" />
        <commandText value="INSERT INTO Log ([Date],[Thread],[Level],[Logger],[Message],[Exception]) VALUES (@log_date, @thread, @log_level, @logger, @message, @exception)" />
        <parameter>
          <parameterName value="@log_date" />
          <dbType value="DateTime" />
          <layout type="log4net.Layout.RawTimeStampLayout" />
        </parameter>
        <parameter>
          <parameterName value="@thread" />
          <dbType value="String" />
          <size value="255" />
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%thread" />
          </layout>
        </parameter>
        <parameter>
          <parameterName value="@log_level" />
          <dbType value="String" />
          <size value="50" />
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%level" />
          </layout>
        </parameter>
        <parameter>
          <parameterName value="@logger" />
          <dbType value="String" />
          <size value="255" />
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%logger" />
          </layout>
        </parameter>
        <parameter>
          <parameterName value="@message" />
          <dbType value="String" />
          <size value="4000" />
          <layout type="log4net.Layout.PatternLayout">
            <conversionPattern value="%message" />
          </layout>
        </parameter>
        <parameter>
          <parameterName value="@exception" />
          <dbType value="String" />
          <size value="2000" />
          <layout type="log4net.Layout.ExceptionLayout" />
        </parameter>
      </appender>
      
      <!--下面的示例演示如何将ASPNETraceAppEnter配置为日志消息到ASP.NET TraceCeTeNT。如果这些消息低于级别警告，则将这些消息写入Stase.Web.TraceCeTr..Wrad方法。如果它们被警告或以上，它们将被写入Sturn.Web.TraceCopTeX.Engulink方法。-->
      <appender name="AspNetTraceAppender" type="log4net.Appender.AspNetTraceAppender" >
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
        </layout>
      </appender>
      
      <!--下面的示例演示如何配置CONSOLAPAPIDER以将消息登录到控制台。默认情况下，消息被发送到控制台标准输出流。-->
      <appender name="ConsoleAppender" type="log4net.Appender.ConsoleAppender">
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
        </layout>
      </appender>

      <appender name="FileAppender" type="log4net.Appender.FileAppender">
        <file value="log-file.log" />
        <appendToFile value="true" />
        <layout type="log4net.Layout.PatternLayout">
          <conversionPattern value="%date [%thread] %-5level %logger [%property{NDC}] - %message%newline" />
        </layout>
      </appender>
      
      <!--此示例演示如何配置RollingFileAppender以按文件大小在日期周期和日期周期内滚动日志文件。对于每一天，只有最后10个文件的1MB将保持。-->
      <appender name="RollingLogFileAppender" type="log4net.Appender.RollingFileAppender,log4net">
        <file value="log/log_file.txt" />
        <appendToFile value="true" />
        <rollingStyle value="Composite" />
        <datePattern value="yyyyMMdd" />
        <!--最多产生的日志文件数，超过则只保留最新的n个。设定值value="－1"为不限文件数-->
        <maxSizeRollBackups value="10" />
        <maximumFileSize value="5MB" />
        <layout type="log4net.Layout.PatternLayout">
          <!--value="
          记录时间：%date 
          线程ID:[%thread] 
          日志级别：%-5level 
          记录类：%logger     
          操作者ID：%property{Operator} 操作类型：%property{Action}%n             
          当前机器名:%property%n当前机器名及登录用户：%username %n               
          记录位置：%location%n 消息描述：%property{Message}%n                    
          异常：%exception%n 消息：%message%newline%n%n" 
          -->
          <conversionPattern value="[%date][%thread][%-5level] - %message%newline" />
        </layout>
        <Encoding value="UTF-8" />
        <!--记录日志写入文件时，不锁定文本文件，防止多线程时不能写Log,官方说线程非安全-->
        <lockingModel type="log4net.Appender.FileAppender+MinimalLock" />
      </appender>
      <!-- Setup the root category, add the appenders and set the default level -->
      <root>
          <level value="ALL" />
          <appender-ref ref="RollingLogFileAppender" />
      </root>
  </log4net>
</configuration>